version: '3.8'
services:
  openresty:
    container_name: openresty
    build: ./openresty
    image: gravity/openresty
    restart: unless-stopped
    depends_on:
      - hasura
    volumes:
      - /tmp
      - openresty-cert:/etc/nginx/cert
    tmpfs:
      - /var/run/openresty
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    networks:
      - hasura
      - openresty
    environment:
      - WORKERS
      - RESOLVER
      - SERVER_NAME
      - ERROR_LOG_LEVEL
      - WORKER_CONNECTIONS
      - CLIENT_MAX_BODY_SIZE
      - CLIENT_BODY_BUFFER_SIZE
      - LUA_SOCKET_POOL_SIZE
      - LUA_CODE_CACHE
      - CERT_CACHE_SIZE
      - ACME_EMAIL
      - JWT_SEED
    command: /bin/ash -c "envsubst < /etc/nginx/nginx.conf > /var/run/openresty/nginx.conf && exec openresty -c /var/run/openresty/nginx.conf"
    logging:
      driver: journald

  hasura:
    container_name: hasura
    image: hasura/graphql-engine
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - hasura
      - postgres
    environment:
      - HASURA_GRAPHQL_DEV_MODE
      - HASURA_GRAPHQL_ADMIN_SECRET
      - HASURA_GRAPHQL_ENABLE_CONSOLE
      - HASURA_GRAPHQL_ENABLE_TELEMETRY=false
      - HASURA_GRAPHQL_AUTH_HOOK=http://openresty/auth/hasura
      - HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
    logging:
      driver: journald

  postgres:
    container_name: postgres
    image: postgis/postgis
    restart: unless-stopped
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - postgres
    environment:
      - POSTGRES_PASSWORD
    logging:
      driver: journald

volumes:
  openresty-cert:

networks:
  openresty:

  hasura:
    ipam:
      config:
        - subnet: 172.72.0.0/24
    internal: true

  postgres:
    internal: true
