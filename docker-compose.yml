version: '3.8'
services:
  openresty:
    hostname: openresty
    container_name: openresty
    build: ./openresty
#    image: tentura/openresty
    image: vbulavintsev/openresty-tentura
    restart: unless-stopped
    depends_on:
       - hasura
    volumes:
      - /tmp
      - ./images:/srv/images
      - ./static:/usr/local/openresty/nginx/html
      - openresty-cert:/etc/nginx/cert
    tmpfs:
      - /var/run/openresty
    ports:
      - "80:80"
      - "443:443"
    networks:
      - proxy
      - backend
    environment:
      - WORKERS
      - RESOLVER
      - SERVER_NAME
      - ERROR_LOG_LEVEL
      - WORKER_CONNECTIONS
      - CLIENT_MAX_BODY_SIZE
      - CLIENT_BODY_BUFFER_SIZE
      - LUA_SOCKET_POOL_SIZE
      - LUA_CODE_CACHE
      - CERT_CACHE_SIZE
      - ACME_EMAIL
      - IS_PROD
      - JWT_EXPIRES_IN
      - JWT_PUBLIC_PEM
      - JWT_PRIVATE_PEM
      - HASURA_LOCATION_OVERRIDE
      - HASURA_GRAPHQL_ADMIN_SECRET
    logging:
      driver: journald

  hasura:
    hostname: hasura
    container_name: hasura
    image: hasura/graphql-engine
    restart: unless-stopped
    depends_on:
      - postgres
      - meritrank
    networks:
      - backend
    environment:
      - HASURA_GRAPHQL_DEV_MODE
      - HASURA_GRAPHQL_ADMIN_SECRET
      - HASURA_GRAPHQL_ENABLE_CONSOLE
      - 'HASURA_GRAPHQL_ENABLE_TELEMETRY=false'
      - 'HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS=true'
      - 'HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres'
      - 'HASURA_GRAPHQL_JWT_SECRET={"type":"Ed25519", "key":"${JWT_PUBLIC_PEM}", "claims_map": {"x-hasura-allowed-roles": ["user", "admin"], "x-hasura-default-role": "user", "x-hasura-user-id": {"path": "$$.sub"}}}'
      - 'MERITRANK_PATH=http://meritrank:8000/graphql'
    logging:
      driver: journald

  meritrank:
    hostname: meritrank
    container_name: meritrank
    image: vbulavintsev/meritrank-service-python:hasura-args-1
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - backend
    environment:
      - 'WALK_COUNT=1000'
      - 'ZERO_NODE=U000000000000'
      - 'ZERO_HEARTBEAT_PERIOD=86400'
      - 'EGO_WARMUP=True'
      - 'EGO_WARMUP_WAIT=60'
      - 'POSTGRES_DB_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres'
      - 'MERITRANK_DEBUG_LEVEL=DEBUG'
      - 'POSTGRES_EDGES_CHANNEL=edges'
    logging:
      driver: journald

  postgres:
    hostname: postgres
    container_name: postgres
    image: vbulavintsev/postgres-tentura:v0.0.3
    restart: unless-stopped
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      - POSTGRES_PASSWORD
      - 'RUST_SERVICE_URL=tcp://rust-service:10234'
    logging:
      driver: journald

  rust-service:
    hostname: rust-service
    container_name: rust-service
    image: vbulavintsev/meritrank-service-rust:v0.0.8
    networks:
      - backend
    ports:
      - '10234:10234'
    environment:
      - POSTGRES_DB_URL
      - POSTGRES_PASSWORD
      - GRAVITY_NUM_WALK
      - WEIGHT_MIN_LEVEL
      - 'RUST_SERVICE_URL=tcp://0.0.0.0:10234'
    depends_on:
      - postgres
    logging:
      driver: journald

volumes:
  openresty-cert:

networks:
  proxy:
  backend:
    internal: true

